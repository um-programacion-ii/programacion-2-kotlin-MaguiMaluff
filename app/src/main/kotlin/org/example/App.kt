/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

class Coche(private var _marca: String = "Ford", private var _modelo: Int = 2020) {
    
    // var marca: String = "Ford"
    // var modelo: Int = 2020

    var marca : String
        get() = _marca
        set(value) {
            _marca = value
        }
    
    var modelo : Int
        get() = _modelo
        set(value) {
            _modelo = value
        }

}

interface Perimetrable {
    fun calcularPerimetro() : Double
    }

class Circulo(val radio: Double) : Perimetrable {
    override fun calcularPerimetro() : Double {
        return 3.14 * radio * 2
    }
}

class Rectangulo(val ancho: Double, val alto: Double) : Perimetrable{
    var area: Double

    // El bloque init se usa para inicializar propiedades o ejecutar código en la creación.
    init {
        // 'area' se calcula una vez cuando se crea el objeto.
        area = ancho * alto
        println("Se ha creado un rectángulo de $ancho x $alto con un área de $area")
    }

    // Un método de la clase
    fun describir() {
        println("Este es un rectángulo.")
    }

    // Un método que realiza un cálculo
    override fun calcularPerimetro(): Double {
        return 2 * (ancho + alto)
    }


}

fun main() {

    val coche = Coche("Chevrolet", 2025)

    println("Marca ${coche.marca}")
    println("Modelo ${coche.modelo}")


    // Escribir una interface perimetrable con un metodo calcularPerimetro()
    // Escribir una clase Rectangulo que implemente la interface Perimetrable
    // Escribir una clase Circulo que implemente la interface Perimetrable
    // Crear una lista con un objeto de cada clase y mostrar el perimetro de cada uno

    val rectangulo = Rectangulo(10.0 , 5.0)
    println("El área del rectángulo es: ${rectangulo.area}")
    rectangulo.describir()

    println("Ejercicio Interfaz")
    val  circulo = Circulo(2.0)
    val figuras: List<Perimetrable> = listOf(
        rectangulo,
        circulo
    )

    for (figura in figuras) {
        println("Perímetro: ${figura.calcularPerimetro()}")
    }

}